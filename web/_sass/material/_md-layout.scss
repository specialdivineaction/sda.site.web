// retrieved from the following angular/material sources on 2016-02-03:
//   - https://github.com/angular/material/blob/eb1249da5c4db0f352370227e3dd1cc84efebb74/src/core/style/layout.scss
//   - https://github.com/angular/material/blob/00152a2d1aa52b598b0095598ad02835fdca9f7e/src/core/services/layout/layout.scss
//   - https://github.com/angular/material/blob/eb1695a0d54f6794a08f04169ad8a390b92a1849/src/core/style/variables.scss
// released under the MIT license
// modified and annotated for use in the SDA project

@import 'md-layout-variables';
@import 'md-layout-mixins';

// the following content is from src/core/services/layout/layout.scss with minimal modifications (i.e. documentation and formatting)

.ng-hide:not(.ng-hide-animate) {
  display: none!important;
}

/*
*
*  Responsive attributes
*
*  References:
*  1) https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties#flex
*  2) https://css-tricks.com/almanac/properties/f/flex/
*  3) https://css-tricks.com/snippets/css/a-guide-to-flexbox/
*  4) https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items
*  5) http://godban.com.ua/projects/flexgrid
*
*
*/

@-moz-document url-prefix() {
  .layout-fill {
    margin: 0;
    width: 100%;
    min-height: 100%;
    height: 100%;
  }
}


/**
 * Apply Mixins to create Layout/Flexbox styles
 */


@include layouts-for-breakpoint();
@include layout-padding-margin();


/**
 * Define:
 *   - `hide-gt-sm show-gt-lg` should hide from 600px to 1200px
 *   - `show-md hide-gt-sm` should show from 0px to 960px and hide at >960px
 *   - `hide-gt-md show-gt-sm` should show everywhere (show overrides hide)`
 *   - `hide` means hide everywhere
 *   - `show` means show everywhere (default behavior)
 *
 * Sizes:
 *   $md-layout-breakpoint-xs: 600px !default;
 *   $md-layout-breakpoint-sm: 960px !default;
 *   $md-layout-breakpoint-md: 1280px !default;
 *   $md-layout-breakpoint-lg: 1920px !default;
 */


// Xtra-SMALL SCREEN
@media (max-width: $md-layout-breakpoint-xs - 1) {
  .hide-xs,
  .hide {
    &:not(.show-xs):not(.show) {
      display: none;
    }
  }

  @include layouts-for-breakpoint(xs);
}

// BIGGER THAN Xtra-SMALL SCREEN
@media (min-width: $md-layout-breakpoint-xs) {
  @include layouts-for-breakpoint(gt-xs);
}

// SMALL SCREEN
@media (min-width: $md-layout-breakpoint-xs) and (max-width: $md-layout-breakpoint-sm - 1) {
  .hide,
  .hide-gt-xs {
    &:not(.show-gt-xs):not(.show-sm):not(.show) {
      display: none;
    }
  }

  .hide-sm:not(.show-gt-xs):not(.show-sm):not(.show) {
    display: none;
  }

  @include layouts-for-breakpoint(sm);
}

// BIGGER THAN SMALL SCREEN
@media (min-width: $md-layout-breakpoint-sm) {
  @include layouts-for-breakpoint(gt-sm);
}

// MEDIUM SCREEN
@media (min-width: $md-layout-breakpoint-sm) and (max-width: $md-layout-breakpoint-md - 1) {
  .hide,
  .hide-gt-xs,
  .hide-gt-sm {
    &:not(.show-gt-xs):not(.show-gt-sm):not(.show-md):not(.show) {
      display: none;
    }
  }

  .hide-md:not(.show-md):not(.show-gt-sm):not(.show-gt-xs):not(.show) {
    display: none;
  }

  @include layouts-for-breakpoint(md);
}

// BIGGER THAN MEDIUM SCREEN
@media (min-width: $md-layout-breakpoint-md) {
  @include layouts-for-breakpoint(gt-md);
}

// LARGE SCREEN
@media (min-width: $md-layout-breakpoint-md) and (max-width: $md-layout-breakpoint-lg - 1) {
  .hide,
  .hide-gt-xs,
  .hide-gt-sm,
  .hide-gt-md {
    &:not(.show-gt-xs):not(.show-gt-sm):not(.show-gt-md):not(.show-lg):not(.show) {
      display: none;
    }
  }

  .hide-lg:not(.show-lg):not(.show-gt-md):not(.show-gt-sm):not(.show-gt-xs):not(.show) {
    display: none;
  }

  @include layouts-for-breakpoint(lg);
}

// BIGGER THAN LARGE SCREEN
@media (min-width: $md-layout-breakpoint-lg) {
  .hide,
  .hide-gt-xs,
  .hide-gt-sm,
  .hide-gt-md,
  .hide-gt-lg {
    &:not(.show-gt-xs):not(.show-gt-sm):not(.show-gt-md):not(.show-gt-lg):not(.show-xl):not(.show) {
      display: none;
    }
  }

  .hide-xl:not(.show-xl):not(.show-gt-lg):not(.show-gt-md):not(.show-gt-sm):not(.show-gt-xs):not(.show) {
    display: none;
  }

  @include layouts-for-breakpoint(gt-lg);
  @include layouts-for-breakpoint(xl);
}

// PRINT
@media print {
  .hide-print:not(.show-print):not(.show) {
    display: none !important;
  }
}
